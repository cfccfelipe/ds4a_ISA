# libraries
from dash import html
from components.about.cardglorsary import cardgl, cardgl_1
from components.about.cardteam import cardteam
import dash_bootstrap_components as dbc
from dash_labs.plugins import register_page


# dash-labs plugin call, menu name and route
register_page(__name__, path='/glosary')

desc = {"FB":"Prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series that have strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend, and typically handles outliers well.",\
        "RF":"A random forest is a machine learning technique that’s used to solve regression and classification problems. It utilizes ensemble learning, which is a technique that combines many classifiers to provide solutions to complex problems. A random forest algorithm consists of many decision trees. The ‘forest’ generated by the random forest algorithm is trained through bagging or bootstrap aggregating. Bagging is an ensemble meta-algorithm that improves the accuracy of machine learning algorithms.",\
        "XGBoost":"XGBoost, which stands for Extreme Gradient Boosting, is a scalable, distributed gradient-boosted decision tree (GBDT) machine learning library. It provides parallel tree boosting and is the leading machine learning library for regression, classification, and ranking problems. It’s vital to an understanding of XGBoost to first grasp the machine learning concepts and algorithms that XGBoost builds upon: supervised machine learning, decision trees, ensemble learning, and gradient boosting."}

gl_1 = cardgl("Facebook Prophet",desc["FB"],"https://towardsdatascience.com/time-series-analysis-with-facebook-prophet-how-it-works-and-how-to-use-it-f15ecf2c0e3a").displayCard()
gl_2 = cardgl("Random Forest",desc["RF"],"https://medium.com/@madushankanipunajith/random-forest-in-machine-learning-91f7a890599e").displayCard()
gl_3 = cardgl_1("XGBoost",desc["XGBoost"],"https://medium.com/p/edd9f99be63d").displayCard()


# specific layout for this page
layout = html.Div(

    children=[
        dbc.Row([
            dbc.Col(gl_1),
            dbc.Col(gl_2),
        ]),
        dbc.Row([
            dbc.Col(),
            dbc.Col(gl_3),
            dbc.Col()
        ]),
    ])
